version: "3"

services:
  caddy:
    image: caddy:latest

    restart: unless-stopped

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - $PWD/data/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  site:
    build:
      context: site
      dockerfile: Dockerfile

    depends_on:
      - caddy

    ports:
      - "8000:80"

  postgres:
    image: postgres:14-alpine

    ports:
      - "7777:5432"

    environment:
      POSTGRES_DB: site
      POSTGRES_PASSWORD: site
      POSTGRES_USER: site

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U site"]
      interval: 2s
      timeout: 1s
      retries: 5

    volumes:
      - $PWD/data/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  grafana:
    image: 'grafana/grafana-oss'
    restart: always

    depends_on:
      - caddy

    environment:
      - GF_INSTALL_PLUGINS=cloudflare-app

    ports:
      - "3000:3000"

  prometheus:
    image: 'prom/prometheus'
    user: root
    restart: always

    depends_on:
      - grafana

    ports:
      - "9090:9090"

    volumes:
      - $PWD/data/prometheus:/etc/prometheus/:rw
      - $PWD/data/prometheus/prometheus_data:/prometheus:rw

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  graphite:
    image: 'hopsoft/graphite-statsd'
    restart: always

    depends_on:
      - grafana

    ports:
      - "80:80"
      - "81:81"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"

volumes:
  caddy_data:
    external: true
  caddy_config:
